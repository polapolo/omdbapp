// Code generated by MockGen. DO NOT EDIT.
// Source: omdb.go

// Package mock_usecase_provider is a generated GoMock package.
package mock_usecase_provider

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	service "github.com/polapolo/omdbapp/internal/service"
	reflect "reflect"
)

// MockOMDBServiceInterface is a mock of OMDBServiceInterface interface
type MockOMDBServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOMDBServiceInterfaceMockRecorder
}

// MockOMDBServiceInterfaceMockRecorder is the mock recorder for MockOMDBServiceInterface
type MockOMDBServiceInterfaceMockRecorder struct {
	mock *MockOMDBServiceInterface
}

// NewMockOMDBServiceInterface creates a new mock instance
func NewMockOMDBServiceInterface(ctrl *gomock.Controller) *MockOMDBServiceInterface {
	mock := &MockOMDBServiceInterface{ctrl: ctrl}
	mock.recorder = &MockOMDBServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOMDBServiceInterface) EXPECT() *MockOMDBServiceInterfaceMockRecorder {
	return m.recorder
}

// Search mocks base method
func (m *MockOMDBServiceInterface) Search(ctx context.Context, keyword string, page int) (service.OMDBSearchResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Search", ctx, keyword, page)
	ret0, _ := ret[0].(service.OMDBSearchResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Search indicates an expected call of Search
func (mr *MockOMDBServiceInterfaceMockRecorder) Search(ctx, keyword, page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockOMDBServiceInterface)(nil).Search), ctx, keyword, page)
}

// GetByID mocks base method
func (m *MockOMDBServiceInterface) GetByID(ctx context.Context, imdbID string) (service.OMDBGetByIDResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, imdbID)
	ret0, _ := ret[0].(service.OMDBGetByIDResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockOMDBServiceInterfaceMockRecorder) GetByID(ctx, imdbID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockOMDBServiceInterface)(nil).GetByID), ctx, imdbID)
}
