// Code generated by MockGen. DO NOT EDIT.
// Source: omdb.go

// Package mock_deliver_grpc_provider is a generated GoMock package.
package mock_deliver_grpc_provider

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	usecase "github.com/polapolo/omdbapp/internal/usecase"
	reflect "reflect"
)

// MockOMDBUsecaseInterface is a mock of OMDBUsecaseInterface interface
type MockOMDBUsecaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOMDBUsecaseInterfaceMockRecorder
}

// MockOMDBUsecaseInterfaceMockRecorder is the mock recorder for MockOMDBUsecaseInterface
type MockOMDBUsecaseInterfaceMockRecorder struct {
	mock *MockOMDBUsecaseInterface
}

// NewMockOMDBUsecaseInterface creates a new mock instance
func NewMockOMDBUsecaseInterface(ctrl *gomock.Controller) *MockOMDBUsecaseInterface {
	mock := &MockOMDBUsecaseInterface{ctrl: ctrl}
	mock.recorder = &MockOMDBUsecaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOMDBUsecaseInterface) EXPECT() *MockOMDBUsecaseInterfaceMockRecorder {
	return m.recorder
}

// Search mocks base method
func (m *MockOMDBUsecaseInterface) Search(ctx context.Context, keyword string, page int) (usecase.OMDBSearchResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Search", ctx, keyword, page)
	ret0, _ := ret[0].(usecase.OMDBSearchResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Search indicates an expected call of Search
func (mr *MockOMDBUsecaseInterfaceMockRecorder) Search(ctx, keyword, page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockOMDBUsecaseInterface)(nil).Search), ctx, keyword, page)
}

// GetByID mocks base method
func (m *MockOMDBUsecaseInterface) GetByID(ctx context.Context, imdbID string) (usecase.OMDBGetByIDResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, imdbID)
	ret0, _ := ret[0].(usecase.OMDBGetByIDResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockOMDBUsecaseInterfaceMockRecorder) GetByID(ctx, imdbID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockOMDBUsecaseInterface)(nil).GetByID), ctx, imdbID)
}
