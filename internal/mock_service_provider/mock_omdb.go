// Code generated by MockGen. DO NOT EDIT.
// Source: omdb.go

// Package mock_service_provider is a generated GoMock package.
package mock_service_provider

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	repository "github.com/polapolo/omdbapp/internal/repository"
	reflect "reflect"
)

// MockOMDBApiRepositoryInterface is a mock of OMDBApiRepositoryInterface interface
type MockOMDBApiRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOMDBApiRepositoryInterfaceMockRecorder
}

// MockOMDBApiRepositoryInterfaceMockRecorder is the mock recorder for MockOMDBApiRepositoryInterface
type MockOMDBApiRepositoryInterfaceMockRecorder struct {
	mock *MockOMDBApiRepositoryInterface
}

// NewMockOMDBApiRepositoryInterface creates a new mock instance
func NewMockOMDBApiRepositoryInterface(ctrl *gomock.Controller) *MockOMDBApiRepositoryInterface {
	mock := &MockOMDBApiRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockOMDBApiRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOMDBApiRepositoryInterface) EXPECT() *MockOMDBApiRepositoryInterfaceMockRecorder {
	return m.recorder
}

// Search mocks base method
func (m *MockOMDBApiRepositoryInterface) Search(ctx context.Context, keyword string, page int) (repository.OMDBSearchResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Search", ctx, keyword, page)
	ret0, _ := ret[0].(repository.OMDBSearchResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Search indicates an expected call of Search
func (mr *MockOMDBApiRepositoryInterfaceMockRecorder) Search(ctx, keyword, page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockOMDBApiRepositoryInterface)(nil).Search), ctx, keyword, page)
}

// GetByID mocks base method
func (m *MockOMDBApiRepositoryInterface) GetByID(ctx context.Context, imdbID string) (repository.OMDBGetByIDResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, imdbID)
	ret0, _ := ret[0].(repository.OMDBGetByIDResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockOMDBApiRepositoryInterfaceMockRecorder) GetByID(ctx, imdbID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockOMDBApiRepositoryInterface)(nil).GetByID), ctx, imdbID)
}
